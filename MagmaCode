ChangeDirectory("/home/s3209784/Documents/MasterProject");
GetCurrentDirectory();
iload "magma_lecture9.m";
Qx<x> := PolynomialRing(Rationals());
f:= x^2+1;
K<a> := NumberField(f);
Qy<y> := PolynomialRing(K);                        
g := y^5+1;
C:= HyperellipticCurve(g);              
J := Jacobian(C);
TorsionBound(J,5);
MaximalOrder(K);
Integers(K); // all yield same result
O := RingOfIntegers(K);
p := 3;
Decomposition(O,p); // check for the primes lying above p
Decomposition(K,p);
I := 2*O; // create ideal pO
IsPrime(I);
Factorization(I);
L := Decomposition(O,2)[1][1]; // the second index is for the ramification index of L but we want only the ideal
RamificationIndex(L);
Valuation(I,L); // valuation using prime ideal L
I1 := 5*O;
Valuation(I1,L);
quo< O | L >;
//L1 := OMRepresentation(L);
//ResidueField(O, L1);
b := Random(K,3); // second value referes to maximal size of coefficients
b in O;
a in O;
Numerator(b);
Completion(K,L);
Basis(K);
IntegralBasis(K,O);
Coef := Coefficients(g);
Coef[1] in O;
&and[ c in O : c in Coefficients(g)];
&and[ c in O : c in [a,b]];     
K1 := FieldOfFractions(O);
b in K1;
Denominator(b);
Numerator(b);
b^-1; // multiplicative inverse of b
Prod := &*[Denominator(c) : c in Coef];
Coef1 := [c*Prod : c in Coef];
f1 := elt< Qy | Coef1 >; 
f1;
L in BadPrimes(C);
I := Decomposition(O,3)[1][1];
I in BadPrimes(C);
Kv := Completion(K,I);
Ov := RingOfIntegers(Kv); // note that ring of integers of complete field is the set of elements with absolute value \geq 1, i.e. the valuation ring
k := ResidueClassField(Ov); // note that mapping that is also included in command in now ignored, i.e. k is only defined as the field
_,phi := ResidueClassField(Ov); // the mapping refered to above
J3 := BaseChange(J,k);
Random(J3);
BaseField(J);
P := C![0,1];
Cpts := Points(C: Bound := 1);                                            
Cpts; 
//Points(J:Bound:=1); this does not work for Jacobions over number fields
//Q := Points(J:Bound:=500)[2];
//Height(Q);
//CanonicalHeight(Q);
//[Height(m) : m in Points(J:Bound:=500)];
Evaluate(g,P);
Pinf := PointsAtInfinity(C)[1];
Height(J!(P-Pinf));


I := [];
for p in PrimesInInterval(2,20) do 
	if #Decomposition(O,p) eq 1 then
		Append(~I,Decomposition(O,p)[1][1]);
	else 
	Append(~I,Decomposition(O,p)[1][1]);
	Append(~I,Decomposition(O,p)[2][1]);
	end if;
end for;

I := Set(I) diff Set(BadPrimes(C));
Inv := [];
for i in I do
	Kp := Completion(K,i);
	Op := RingOfIntegers(Kp);
	k := ResidueClassField(Op);
	Jk := BaseChange(J,k);
	G := AbelianGroup(Jk);
	Append(~Inv,Invariants(G));
end for;

B := TorsionBound(J,10);
b, pos := Min(Min(Inv)); 
b lt B;	
L := [];
for i := 1 to #Inv do 
	v := [x : x in Inv[i] | x/B notin Integers()];
	if #v eq #Inv[i] then
		Append(~L,v);
	end if;
end for;	
IsEmpty(L);			
Inv := [[3, 60], [666]];
B := 18;
Bound := function(Inv,L)
	if IsEmpty(L) then
		return B;
	else 
		return B/Min(Min(L));
	end if;	
end function;
